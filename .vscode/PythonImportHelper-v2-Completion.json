[
    {
        "label": "calcular_nota",
        "kind": 2,
        "importPath": "ejercicies",
        "description": "ejercicies",
        "peekOfCode": "def calcular_nota(n1, n2, n3):\n    return (n1*0.3) + (n2*0.3) + (n3*0.4)\nn1= float(input(\"Ingrese la primera nota: \"))\nn2= float(input(\"Ingrese la primera nota: \"))\nn3= float(input(\"Ingrese la primera nota: \"))\nnotafinal= calcular_nota(n1,n2,n3)\nprint(\"Nota final: \" , round(notafinal, 4))",
        "detail": "ejercicies",
        "documentation": {}
    },
    {
        "label": "calcular_Iva",
        "kind": 2,
        "importPath": "ejercicio2",
        "description": "ejercicio2",
        "peekOfCode": "def calcular_Iva(p):\n    IVA = p * 0.19\n    return IVA  \nprecioCompra = float(input(\"Ingresa el valor de la compra: \"))\nIVA = calcular_Iva(precioCompra)\nprint(IVA)",
        "detail": "ejercicio2",
        "documentation": {}
    },
    {
        "label": "precioCompra",
        "kind": 5,
        "importPath": "ejercicio2",
        "description": "ejercicio2",
        "peekOfCode": "precioCompra = float(input(\"Ingresa el valor de la compra: \"))\nIVA = calcular_Iva(precioCompra)\nprint(IVA)",
        "detail": "ejercicio2",
        "documentation": {}
    },
    {
        "label": "IVA",
        "kind": 5,
        "importPath": "ejercicio2",
        "description": "ejercicio2",
        "peekOfCode": "IVA = calcular_Iva(precioCompra)\nprint(IVA)",
        "detail": "ejercicio2",
        "documentation": {}
    },
    {
        "label": "ValidarNro",
        "kind": 2,
        "importPath": "ejercicios4",
        "description": "ejercicios4",
        "peekOfCode": "def ValidarNro(nro):\n    estado = True\n    if nro < -100:\n        estado = False\n    else:\n        if nro > 100:\n            estado = False\n    return estado\nsumar = 0\nfor x in range(1, 5, 1):",
        "detail": "ejercicios4",
        "documentation": {}
    },
    {
        "label": "sumar",
        "kind": 5,
        "importPath": "ejercicios4",
        "description": "ejercicios4",
        "peekOfCode": "sumar = 0\nfor x in range(1, 5, 1):\n    finWhileNumero = False\n    while finWhileNumero == False:\n        numero = int(input(\"Ingrese un numero (entero): \"))\n        if ValidarNro(numero) == False:\n            print(\"El numero ingresado esta por fuera del dominio (-100, +100)\")\n        else:\n            finWhileNumero = True\n    sumar = sumar + numero",
        "detail": "ejercicios4",
        "documentation": {}
    },
    {
        "label": "promedio",
        "kind": 5,
        "importPath": "ejercicios4",
        "description": "ejercicios4",
        "peekOfCode": "promedio = sumar / 4\nprint(\"El promedio es: \", promedio)",
        "detail": "ejercicios4",
        "documentation": {}
    }
]